{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alfalak\\\\Desktop\\\\React\\\\12-finished-food-app\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from 'react';\nimport classes from './Checkout.module.css';\n//i uesed ref because i want to check validity whrn form submitted not with every key \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = value => value.trim() === '';\nconst isFiveChar = value => value.trim().length !== 5;\nconst Checkout = props => {\n  _s();\n  const [formInputValidity, set] = useState({});\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName); //if entered name is not empty so its valid\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostlCodeIsValid = isFiveChar(enteredPostalCode);\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostlCodeIsValid;\n    if (!formIsValid) {\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"l+3OakeX4RhFjVi868EzCYVT70g=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useRef","useState","classes","isEmpty","value","trim","isFiveChar","length","Checkout","props","formInputValidity","set","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostlCodeIsValid","formIsValid","form","control","actions","onCancel","submit"],"sources":["C:/Users/alfalak/Desktop/React/12-finished-food-app/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef, useState } from 'react';\r\nimport classes from './Checkout.module.css';\r\n//i uesed ref because i want to check validity whrn form submitted not with every key \r\n\r\nconst isEmpty = value => value.trim() === '';\r\nconst isFiveChar = value => value.trim().length !== 5;\r\n\r\n\r\n\r\n\r\nconst Checkout = (props) => {\r\n    const [formInputValidity, set] = useState({\r\n\r\n    })\r\n\r\n    const nameInputRef = useRef();\r\n    const streetInputRef = useRef();\r\n    const postalCodeInputRef = useRef();\r\n    const cityInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredStreet = streetInputRef.current.value;\r\n    const enteredPostalCode = postalCodeInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);//if entered name is not empty so its valid\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredPostlCodeIsValid = isFiveChar(enteredPostalCode);\r\n\r\n    const formIsValid = \r\n    enteredNameIsValid &&\r\n    enteredStreetIsValid &&\r\n    enteredCityIsValid &&\r\n    enteredPostlCodeIsValid ;\r\n\r\n    if (!formIsValid){\r\n        return;\r\n    }\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={classes.control}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input type='text' id='name'  ref={nameInputRef}/>\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor='street'>Street</label>\r\n        <input type='text' id='street' ref={streetInputRef} />\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor='postal'>Postal Code</label>\r\n        <input type='text' id='postal' ref={postalCodeInputRef} />\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor='city'>City</label>\r\n        <input type='text' id='city'  ref={cityInputRef}/>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C;AAAA;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAI,EAAE,KAAK,EAAE;AAC5C,MAAMC,UAAU,GAAGF,KAAK,IAAIA,KAAK,CAACC,IAAI,EAAE,CAACE,MAAM,KAAK,CAAC;AAKrD,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EACxB,MAAM,CAACC,iBAAiB,EAAEC,GAAG,CAAC,GAAGV,QAAQ,CAAC,CAE1C,CAAC,CAAC;EAEF,MAAMW,YAAY,GAAGZ,MAAM,EAAE;EAC7B,MAAMa,cAAc,GAAGb,MAAM,EAAE;EAC/B,MAAMc,kBAAkB,GAAGd,MAAM,EAAE;EACnC,MAAMe,YAAY,GAAGf,MAAM,EAAE;EAE/B,MAAMgB,cAAc,GAAIC,KAAK,IAAK;IAChCA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAMC,WAAW,GAAGP,YAAY,CAACQ,OAAO,CAAChB,KAAK;IAC9C,MAAMiB,aAAa,GAAGR,cAAc,CAACO,OAAO,CAAChB,KAAK;IAClD,MAAMkB,iBAAiB,GAAGR,kBAAkB,CAACM,OAAO,CAAChB,KAAK;IAC1D,MAAMmB,WAAW,GAAGR,YAAY,CAACK,OAAO,CAAChB,KAAK;IAE9C,MAAMoB,kBAAkB,GAAG,CAACrB,OAAO,CAACgB,WAAW,CAAC,CAAC;IACjD,MAAMM,oBAAoB,GAAG,CAACtB,OAAO,CAACkB,aAAa,CAAC;IACpD,MAAMK,kBAAkB,GAAG,CAACvB,OAAO,CAACoB,WAAW,CAAC;IAChD,MAAMI,uBAAuB,GAAGrB,UAAU,CAACgB,iBAAiB,CAAC;IAE7D,MAAMM,WAAW,GACjBJ,kBAAkB,IAClBC,oBAAoB,IACpBC,kBAAkB,IAClBC,uBAAuB;IAEvB,IAAI,CAACC,WAAW,EAAC;MACb;IACJ;EAGF,CAAC;EAED,oBACE;IAAM,SAAS,EAAE1B,OAAO,CAAC2B,IAAK;IAAC,QAAQ,EAAEb,cAAe;IAAA,wBACtD;MAAK,SAAS,EAAEd,OAAO,CAAC4B,OAAQ;MAAA,wBAC9B;QAAO,OAAO,EAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eACvC;QAAO,IAAI,EAAC,MAAM;QAAC,EAAE,EAAC,MAAM;QAAE,GAAG,EAAElB;MAAa;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9C,eACN;MAAK,SAAS,EAAEV,OAAO,CAAC4B,OAAQ;MAAA,wBAC9B;QAAO,OAAO,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe,eACtC;QAAO,IAAI,EAAC,MAAM;QAAC,EAAE,EAAC,QAAQ;QAAC,GAAG,EAAEjB;MAAe;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAClD,eACN;MAAK,SAAS,EAAEX,OAAO,CAAC4B,OAAQ;MAAA,wBAC9B;QAAO,OAAO,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eAC3C;QAAO,IAAI,EAAC,MAAM;QAAC,EAAE,EAAC,QAAQ;QAAC,GAAG,EAAEhB;MAAmB;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACtD,eACN;MAAK,SAAS,EAAEZ,OAAO,CAAC4B,OAAQ;MAAA,wBAC9B;QAAO,OAAO,EAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,eAClC;QAAO,IAAI,EAAC,MAAM;QAAC,EAAE,EAAC,MAAM;QAAE,GAAG,EAAEf;MAAa;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9C,eACN;MAAK,SAAS,EAAEb,OAAO,CAAC6B,OAAQ;MAAA,wBAC9B;QAAQ,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAEtB,KAAK,CAACuB,QAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAErC,eACT;QAAQ,SAAS,EAAE9B,OAAO,CAAC+B,MAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/C;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX,CAAC;AAAC,GA9DIzB,QAAQ;AAAA,KAARA,QAAQ;AAgEd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}